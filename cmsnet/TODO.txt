[COMPLEX]
1. Implement the VM script system
2. Finish implementing handling of CMS messages (finish mininet_service.py)
3. Make a cleaner API later.
  - Details unclear, but hopefuly more like Murphy's example.


[SIMPLE]
1. Rewrite component repr() methods and do_dump() in CLI
2. Rewrite comments and docstrings.
  - Mostly, change stuff referring to Mininet to CMSnet
3. Clean up unnecessary dummy usage in cms executable


[LATER]
1. Mininet node updating (need to request first a push with POXSwitch).
  - Note that this also includes updating clean.py and the mn executable
2. Mininet net updating (moveLink, etc.)
3. Mininet clean updating (need to kill POX)
  - This may require using runpy that kills only those ran by Mininet. A
    bit hacky, but it's probably the best way currently.


[INCOMPLETE]
1. Finish main functions other than deleteVM:
  - createVM
    - cli: Implement more options as input
    - net: Accept more options and handle vm_script input
    - comp: Accept vm_script as input
  - cloneVM   (net, comp)
    - net: Extract vm_script (leave complexity in comp?)
    - comp: Copy vm_script file, consider other info params in node
  - Some parts may require finishing the VM script system
2. Figure out a way for resumed configurations without a Topo class to restart
   all VMs and hypervisors correctly
  - We need to preserve the hypervisor identities (names), so some info must
    be preserved here.
  - Unfortunately, there is no way to know the number of switches set up or
    the topology they hold. Maybe there should be a check upon starting that
    checks this with hypervisor configurations, and assume that any conflict
    in config info would suggest a completely new configuration for CMSnet
  - Also have --new_config ignore previous component configurations as well.
  - Currently, Mininet just dies if the config is not consistent. Also, part
    of the problem likes in hacky API's. We need to have it work without topo.


[DONE]
1. Rewrite moveLink and others to get default interfaces if input name is None.
2. Add extra aliases to the CLI for each command.
3. Finish main functions other than deleteVM:
  - launchVM
  - migrateVM
  - stopVM
4. Implement VM distribution mode handling in launchVM
  - In the end, these modes did not become classes but rather methods.
5. Implement CMS message level at controller.
6. Test get_hypervisors_beta and consider making it the official version.
7. Implemented hypervisor config handling.
8. Finish implementing enabling/disabling of hypervisors
  - 2 types of disabling: shutdown (eviction) and kill (stopping)
  - evictVMs function moves to different HVs. Called by shutdown disable
9. Implement VM pausing
10. Finish deleteVM
  - Stuff like xterms and such aren't properly shutdown until
    Mininet itself shuts down. Saved to VM. A bit messy.
  - It would be better to have Mininet itself split it across nodes, but
    only a VM would be removed like this.


